{
    "template_id": "cost_metrics",
    "template_project": "${project_id_gov}",
    "template_region": "${region}",
    "fields": [
        {
            "field_id": "total_query_bytes_billed",
            "query_expression": "select if(sum(total_bytes_billed)>0,sum(total_bytes_billed),0) as total_query_bytes_billed from (select * from `$project`.`region-${region}`.INFORMATION_SCHEMA.JOBS_BY_PROJECT, unnest(referenced_tables) as rt where rt.project_id = '$project' and rt.dataset_id = '$dataset' and rt.table_id = '$table' and date(creation_time) >= (select date(year, month, 01) from (select extract(year from current_date) as year, extract(month from current_date) as month)))"
        },
        {
            "field_id": "total_storage_bytes_billed",
            "query_expression": "select if(total_physical_bytes>0,total_physical_bytes,0) as total_storage_bytes_billed from (select * from `$project`.`region-${region}`.INFORMATION_SCHEMA.TABLE_STORAGE_BY_PROJECT where table_schema = '$dataset' and table_name = '$table')"
        },
        {
            "field_id": "total_bytes_transferred",
            "query_expression": "select `${project_id_gov}`.remote_functions_${env_short_form}.get_bytes_transferred_${env_short_form}('bytes', '$project', '$dataset', '$table')"
        },
        {
            "field_id": "estimated_query_cost",
            "query_expression": "with price_export_by_day as (select date(pricing_as_of_time) price_date, t.usd_amount as price_amount from  `${project_id_gov}`.${pricing_export_dataset}.cloud_pricing_export, unnest(billing_account_price.tiered_rates) as t where sku.description = 'Analysis (${region})' and t.usd_amount > 0 and date(pricing_as_of_time) >= (select date(year, month, 01) from (select extract(year from current_date) as year, extract(month from current_date) as month))), bytes_billed_by_day as (select date(creation_time) load_date, if(sum(total_bytes_billed)>0,sum(total_bytes_billed),0) as total_bytes_billed_by_day from (select * from `$project`.`region-${region}`.INFORMATION_SCHEMA.JOBS_BY_PROJECT, unnest(referenced_tables) as rt where rt.project_id = '$project' and rt.dataset_id = '$dataset' and rt.table_id = '$table' and date(creation_time) >= (select date(year, month, 01) from (select extract(year from current_date) as year, extract(month from current_date) as month))) group by date(creation_time)), byte_price_by_day as (select (round(safe_divide(bb.total_bytes_billed_by_day, pow(1024, 4)) * pe.price_amount)) as bytes_billed from bytes_billed_by_day bb inner join price_export_by_day pe on (bb.load_date = pe.price_date)) select if(sum(bytes_billed) > 0, sum(bytes_billed), 0) from byte_price_by_day"
        },
        {
            "field_id": "estimated_storage_cost",
            "query_expression": "with price_export_by_day as (select date(pricing_as_of_time) price_date, t.usd_amount as price_amount from  `${project_id_gov}`.${pricing_export_dataset}.cloud_pricing_export, unnest(billing_account_price.tiered_rates) as t where sku.description = 'Analysis (${region})' and t.usd_amount > 0 and date(pricing_as_of_time) >= (select date(year, month, 01) from (select extract(year from current_date) as year, extract(month from current_date) as month))), bytes_billed_by_day as (select date(creation_time) load_date, if(sum(total_physical_bytes)>0,sum(total_physical_bytes),0) as total_physical_bytes_by_day from (select * from `$project`.`region-${region}`.INFORMATION_SCHEMA.TABLE_STORAGE_BY_PROJECT where table_schema = '$dataset' and table_name = '$table' and date(creation_time) >= (select date(year, month, 01) from (select extract(year from current_date) as year, extract(month from current_date) as month))) group by date(creation_time)), byte_price_by_day as (select (round(safe_divide(bb.total_physical_bytes_by_day, pow(1024, 3)) * pe.price_amount)) as total_storage_bytes_billed from bytes_billed_by_day bb inner join price_export_by_day pe on (bb.load_date = pe.price_date)) select if(sum(total_storage_bytes_billed) > 0, sum(total_storage_bytes_billed), 0) from byte_price_by_day"
        },
        {
            "field_id": "estimated_egress_cost",
            "query_expression": "select `${project_id_gov}`.remote_functions_${env_short_form}.get_bytes_transferred_${env_short_form}('cost', '$project', '$dataset', '$table')"
        }
    ],
    "included_tables_uris": "bigquery/project/${project_id_data}/dataset/${inspection_dataset_id}/*",
    "refresh_mode": "ON_DEMAND",
    "tag_history": true,
    "tag_stream": false
}
