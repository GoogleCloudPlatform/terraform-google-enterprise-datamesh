main:
    steps:
    - get_oauth_token_1:
        call: googleapis.workflowexecutions.v1.projects.locations.workflows.executions.create
        args:
            parent: "projects/${project_id_gov}/locations/us-central1/workflows/oauth-token"
        result: oauth_token
    - format_token_1:
        assign: 
            - formatted_token: $${text.substring(oauth_token.result, 2, 1025)}
    - data_sensitivity:
        call: googleapis.workflowexecutions.v1.projects.locations.workflows.executions.create
        args:
            parent: "projects/${project_id_gov}/locations/us-central1/workflows/tag-data-sensitivity-${inspection_dataset_id}"
            body:
                argument: '$${"{" + "\"oauth_token\": \"" + formatted_token + "\"" + "}"}'
        result: data_sensitivity_result
    - get_oauth_token_2:
        call: googleapis.workflowexecutions.v1.projects.locations.workflows.executions.create
        args:
            parent: "projects/${project_id_gov}/locations/us-central1/workflows/oauth-token"
        result: oauth_token
    - format_token_2:
        assign: 
            - formatted_token: $${text.substring(oauth_token.result, 2, 1025)}
    - cdmc_controls:
        call: googleapis.workflowexecutions.v1.projects.locations.workflows.executions.create
        args:
            parent: "projects/${project_id_gov}/locations/us-central1/workflows/tag-cdmc-controls-${inspection_dataset_id}"
            body:
                argument: '$${"{" + "\"oauth_token\": \"" + formatted_token + "\"" + "}"}'
        result: cdmc_controls_result
    - get_oauth_token_3:
        call: googleapis.workflowexecutions.v1.projects.locations.workflows.executions.create
        args:
            parent: "projects/${project_id_gov}/locations/us-central1/workflows/oauth-token"
        result: oauth_token
    - format_token_3:
        assign: 
            - formatted_token: $${text.substring(oauth_token.result, 2, 1025)}
    - security_policy:
        call: googleapis.workflowexecutions.v1.projects.locations.workflows.executions.create
        args:
            parent: "projects/${project_id_gov}/locations/us-central1/workflows/tag-security-policy-${inspection_dataset_id}"
            body:
                argument: '$${"{" + "\"oauth_token\": \"" + formatted_token + "\"" + "}"}'
        result: security_policy_result
    - get_oauth_token_4:
        call: googleapis.workflowexecutions.v1.projects.locations.workflows.executions.create
        args:
            parent: "projects/${project_id_gov}/locations/us-central1/workflows/oauth-token"
        result: oauth_token
    - format_token_4:
        assign: 
            - formatted_token: $${text.substring(oauth_token.result, 2, 1025)}
    - cost_metrics:
        call: googleapis.workflowexecutions.v1.projects.locations.workflows.executions.create
        args:
            parent: "projects/${project_id_gov}/locations/us-central1/workflows/tag-cost-metrics-${inspection_dataset_id}"
            body:
                argument: '$${"{" + "\"oauth_token\": \"" + formatted_token + "\"" + "}"}'
        result: cost_metrics_result
    - get_oauth_token_5:
        call: googleapis.workflowexecutions.v1.projects.locations.workflows.executions.create
        args:
            parent: "projects/${project_id_gov}/locations/us-central1/workflows/oauth-token"
        result: oauth_token
    - format_token_5:
        assign: 
            - formatted_token: $${text.substring(oauth_token.result, 2, 1025)}
    - completeness:
        call: googleapis.workflowexecutions.v1.projects.locations.workflows.executions.create
        args:
            parent: "projects/${project_id_gov}/locations/us-central1/workflows/tag-completeness-${inspection_dataset_id}"
            body:
                argument: '$${"{" + "\"oauth_token\": \"" + formatted_token + "\"" + "}"}'
        result: completeness_result
    - get_oauth_token_6:
        call: googleapis.workflowexecutions.v1.projects.locations.workflows.executions.create
        args:
            parent: "projects/${project_id_gov}/locations/us-central1/workflows/oauth-token"
        result: oauth_token
    - format_token_6:
        assign: 
            - formatted_token: $${text.substring(oauth_token.result, 2, 1025)}
    - correctness:
        call: googleapis.workflowexecutions.v1.projects.locations.workflows.executions.create
        args:
            parent: "projects/${project_id_gov}/locations/us-central1/workflows/tag-correctness-${inspection_dataset_id}"
            body:
                argument: '$${"{" + "\"oauth_token\": \"" + formatted_token + "\"" + "}"}'
        result: correctness_result
    - get_oauth_token_7:
        call: googleapis.workflowexecutions.v1.projects.locations.workflows.executions.create
        args:
            parent: "projects/${project_id_gov}/locations/us-central1/workflows/oauth-token"
        result: oauth_token
    - format_token_7:
        assign: 
            - formatted_token: $${text.substring(oauth_token.result, 2, 1025)}
    - impact_assessment:
        call: googleapis.workflowexecutions.v1.projects.locations.workflows.executions.create
        args:
            parent: "projects/${project_id_gov}/locations/us-central1/workflows/tag-impact-assessment-${inspection_dataset_id}"
            body:
                argument: '$${"{" + "\"oauth_token\": \"" + formatted_token + "\"" + "}"}'
        result: impact_assessment_result
    - get_oauth_token_8:
        call: googleapis.workflowexecutions.v1.projects.locations.workflows.executions.create
        args:
            parent: "projects/${project_id_gov}/locations/us-central1/workflows/oauth-token"
        result: oauth_token
    - format_token_8:
        assign: 
            - formatted_token: $${text.substring(oauth_token.result, 2, 1025)}
    - export:
        call: googleapis.workflowexecutions.v1.projects.locations.workflows.executions.create
        args:
            parent: "projects/${project_id_gov}/locations/us-central1/workflows/tag-exp-all-templates-${inspection_dataset_id}"
            body:
                argument: '$${"{" + "\"oauth_token\": \"" + formatted_token + "\"" + "}"}'
        result: export_result
    - return_status:
        return: "done"